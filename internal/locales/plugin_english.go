package locales

import "golang.org/x/text/language"

type englishPlugin struct{}

func (e englishPlugin) Name() string {
	return "English"
}

func (e englishPlugin) Language() language.Tag {
	return language.English
}

func (e englishPlugin) GetTagList() map[Tag]string {
	return map[Tag]string{
		ERROR_OPEN_PLUGIN_FAILED:         string(ERROR_OPEN_PLUGIN_FAILED),
		ERROR_INCORRECT_PLUGIN:           string(ERROR_INCORRECT_PLUGIN),
		ERROR_INITIALIZE_PLUGIN_FAILED:   string(ERROR_INITIALIZE_PLUGIN_FAILED),
		ERROR_INCORRECT_PLUGIN_FOLDER:    string(ERROR_INCORRECT_PLUGIN_FOLDER),
		ERROR_START_APPLICATION_FAILED:   string(ERROR_START_APPLICATION_FAILED),
		ERROR_ALREADY_EXISTS:             string(ERROR_ALREADY_EXISTS),
		ERROR_SAVE_FAILED:                string(ERROR_SAVE_FAILED),
		ERROR_REMOVE_FAILED:              string(ERROR_REMOVE_FAILED),
		ERROR_MARSHAL_FAILED:             string(ERROR_MARSHAL_FAILED),
		ERROR_UNMARSHAL_FAILED:           string(ERROR_UNMARSHAL_FAILED),
		ERROR_ENDPOINTS_REQUIRED:         string(ERROR_ENDPOINTS_REQUIRED),
		ERROR_INCORRECT_ENDPOINT:         string(ERROR_INCORRECT_ENDPOINT),
		LOG_INFO_PLUGIN_DISCOVERY:        string(LOG_INFO_PLUGIN_DISCOVERY),
		LOG_INFO_PLUGIN_LANGUAGE_LOADED:  string(LOG_INFO_PLUGIN_LANGUAGE_LOADED),
		LOG_INFO_APPLICATION_STARTED:     string(LOG_INFO_APPLICATION_STARTED),
		LOG_INFO_APPLICATION_STOPED:      string(LOG_INFO_APPLICATION_STOPED),
		LOG_INFO_LANGUAGE_CHANGED:        string(LOG_INFO_LANGUAGE_CHANGED),
		LOG_INFO_THEME_CHANGED:           string(LOG_INFO_THEME_CHANGED),
		LOG_INFO_RENEW_RENDER_WINDOWS:    string(LOG_INFO_RENEW_RENDER_WINDOWS),
		FLAG_PLUGIN_FOLDER_DESCRIPTION:   string(FLAG_PLUGIN_FOLDER_DESCRIPTION),
		LABEL_SELECT_LANGUAGE:            string(LABEL_SELECT_LANGUAGE),
		LABEL_SELECT_THEME:               string(LABEL_SELECT_THEME),
		LABEL_THEME_LIGHT:                string(LABEL_THEME_LIGHT),
		LABEL_THEME_DARK:                 string(LABEL_THEME_DARK),
		LABEL_RECORD_SIZE:                string(LABEL_RECORD_SIZE),
		LABEL_NEW_REDIS_NAME:             string(LABEL_NEW_REDIS_NAME),
		LABEL_NEW_REDIS_ENDPOINT:         string(LABEL_NEW_REDIS_ENDPOINT),
		LABEL_NEW_REDIS_PASSWORD:         string(LABEL_NEW_REDIS_PASSWORD),
		LABEL_NEW_REDIS_PLACEHOLDER:      string(LABEL_NEW_REDIS_PLACEHOLDER),
		LABEL_NEW_REDIS_NAME_PLACEHOLDER: string(LABEL_NEW_REDIS_NAME_PLACEHOLDER),
		TITLE_SETTING_WINDOWS:            string(TITLE_SETTING_WINDOWS),
		TITLE_REDIS_CREATE_WINDOWS:       string(TITLE_REDIS_CREATE_WINDOWS),
		BUTTON_CONFIRM:                   string(BUTTON_CONFIRM),
		BUTTON_SAVE:                      string(BUTTON_SAVE),
		BUTTON_CANCEL:                    string(BUTTON_CANCEL),
		BUTTON_EDIT_SETTING:              string(BUTTON_EDIT_SETTING),
		BUTTON_CONNECT:                   string(BUTTON_CONNECT),
		BUTTON_DISCONNECT:                string(BUTTON_DISCONNECT),
	}
}
